#summary a step-by-step guide to downloading & installing v4l4j
#labels Featured

=Quick Start=
For the impatient, here are a few instructions that will get you started:
 * If you are using Ubuntu or Debian, check [DebianInstall this page to install v4l4j Debian packages].
 * Otherwise, use the following these steps to install from source:
   * Either download the latest stable tarball from [http://code.google.com/p/v4l4j/downloads/list Downloads tab] above, or the latest SVN version using `svn co http://v4l4j.googlecode.com/svn/v4l4j/trunk v4l4j`
   * Install Sun JDK6 or OpenJDK6, libjpeg development files & Apache ant 
   * Edit v4l4j/src/Makefile and point `JDK_HOME` to the where the JDK is installed
   * Run `ant test-gui`.

This will compile v4l4j and run a test application that displays a video stream from /dev/video0 by default. To use another video device, add `-Dtest.device=/dev/videoXX` to the last line. If things go wrong, then read on. Otherwise, jump to [GettingStarted#Installing the install section] to install v4l4j and start writing your own application.

=Download=
Choose one of the following method to download v4l4j:
 * *Debian packages*
[DebianInstall This page] explains how to install v4l4j from Debian packages.
 * *Latest SVN snapshot*
The latest snapshot of v4l4j can be downloaded using:
{{{
svn co http://v4l4j.googlecode.com/svn/v4l4j/trunk v4l4j
}}}

 * *Latest stable version*
The latest stable version of v4l4j is available as a tar archive from the [http://code.google.com/p/v4l4j/downloads/list Downloads tab].


=Requirements=
v4l4j requires the following:
 * a supported V4L video source (webcam, capture card, tuner card). 
 * Sun JAVA JDK 1.6 or OpenJDK6 (it wont compile with earlier versions and it *must* be a JDK !!!). Install the JDK somewhere and note the location. In Ubuntu/Debian, this can be done with:
{{{
sudo apt-get install sun-java6-jdk
}}}
 * the development files of libjpeg, as well as libjpeg itself. In Ubuntu/Debian, this can be done using
{{{
sudo apt-get install libjpeg-dev
}}}
 * make, gcc and Apache Ant (to build the classes and JNI library). In Ubuntu/Debian, this can be done using
{{{
sudo apt-get install build-essential ant
}}}

=Build=
First, make sure that you have all the dependencies installed (see previous Requirements paragraph). To compile v4l4j, run `ant all` in the top-level directory. This will first 
compile the libvideo shared library and the JNI library libv4l4j.so. It will then compile the java classes and pack them in a JAR file. Both the JNI library libv4l4j.so and the JAR file v4l4j.jar are copied in the top-level directory. libvideo is NOT copied in the top-level directory and remains in libvideo/ .
If you get this error:
{{{
v4l4j_FrameGrabber.c:25:17: error: jni.h: No such file or directory
}}}
edit v4l4j/src/Makefile and change the top line `JDK_HOME=/usr/lib/jvm/java-6-sun` to point to the directory where you previously installed the JDK.
If you get this error:
{{{
v4l4j_FrameGrabber.c:27:21: error: jpeglib.h: No such file or directory
}}}
you havent installed the development files on libjpeg. See the previous paragraph on how to fix this.

The JavaDoc can be generated with `ant javadoc` and is located in doc/.

=Installing=
*Please note that if you have insatlled a previous version of v4l4j, you MUST uninstall it before you install a new one.* In order to use the v4l4j package from your Java application, it is recommended that you install both libraries (libvideo and the JNI library), as well as v4l4j's JAR file. This is done in 3 steps:
 * Run `sudo ant install`. This will copy libvideo's shared library in /usr/lib , the JNI library libv4l4j.so in /usr/lib/jni and v4l4j's JAR file in /usr/share/java. Any of these paths can be changed by modifying the right property in build.properties .
 * Make sure you run `sudo ldconfig` so libvideo's shared library is added to the cache.
 * When running your application, pass the following arguments to the JVM: `-Djava.library.path=/usr/lib/jni -cp /usr/share/java/v4l4j.jar` . Modify these values if you have changed the default installation directories.

You can later on uninstall v4l4j using `sudo ant uninstall`

=Testing=
Three example applications are shipped with v4l4j:
 * The first one simply captures frames for 10 seconds and print the frame rate. Run it with `ant test-fps`
 * The second one displays the video stream in a window. Run it with `ant test-gui`.
 * The third one prints information about the video device itself. Run it with `ant deviceInfo`

By default, these tests will use /dev/video0 as the video device (assumed to be a webcam), and the capture resolution is set to 640x480 . You can change any of these settings by editing the values at the end of the "build.properties" file, or provide those values on the ant command line:
  * `-Dtest.device=` changes the video device,
  * `-Dtest.width=` changes the width of captured frames,
  * `-Dtest.height=` changes the height of captured frames,
  * `-Dtest.channel=` changes the input used for capture (0 for webcams),
  * `-Dtest.standard=` changes the video standard used during capture (0 for webcams, 1 for PAL, 2 for SECAM and 3 for NTSC).
  * `-Dtest.inFormat=` changes the capture image format, ie the format images are captured in from Video4Linux (used only by `ant test-fps`). The value must be an image format supported by your video device, as listed in `ant deviceInfo`.
  * `-Dtest.outFormat=` changes the output image format, ie the format image will be in when handed out by v4l4j (used only by `ant test-fps`). Acceptable values are:
    * 0: raw format - v4l4j will not do any format conversion and images will be handed out in their original capture format.
    * 1: JPEG format 
    * 2: RGB24 format
    * 3: BGR24 format
    * 4: YUV420 format
    * 5: YVU420 format

=Debugging=
*First, if you have already installed v4l4j then uninstall it*, otherwise the previous jar file & libraries (without debug statements) may take precedence over the new ones. Then, compile v4l4j to produce extra debug output, useful to troubleshoot issues, with `ant clean all-debug`. Install it with `sudo ant install`. Also, check the the [Troubleshooting troubleshooting page] for help on solving common issues.

=Issues=
Feedback is is greatly appreciated to expand the list of platforms and video devices v4l4j has been successfully tested with. Feedback, issues and queries can be emailed to the [http://groups.google.com/group/v4l4j v4l4j mailing list] along with a description of what went wrong (or right) and what hardware you run v4l4j on. Before posting, check the [Troubleshooting troubleshooting] page for more information.